name: Build Lean OpenWrt for ZN-M2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 180
    
    steps:
    - name: Checkout OpenWrt
      uses: actions/checkout@v4
      with:
        repository: openwrt/openwrt
        ref: v23.05.3
        path: openwrt

    # ================================
    # 核心配置修改区
    # ================================
    - name: Apply Device Specific Configuration
      run: |
        cd openwrt
        # 覆盖设备定义
        mkdir -p target/linux/ipq60xx/image/
        cat > target/linux/ipq60xx/image/generic.mk << 'EOF'
        define Device/zn_m2
          $(call Device/FitImage)
          $(call Device/UbiFit)
          DEVICE_VENDOR := ZN
          DEVICE_MODEL := M2
          BLOCKSIZE := 128k
          PAGESIZE := 2048
          SOC := ipq6000
          DEVICE_DTS_CONFIG := config@cp03-c1
          
          DEFAULT_PACKAGES := \
            base-files busybox dropbear firewall fstools logd \
            mtd netifd opkg procd uci urandom-seed urng \
            kmod-ath10k-ct wpad-openssl \
            -ipq-wifi-zn_m2 \
            -kmod-nss-* -kmod-usb* -kmod-dwc3* -ppp* -qca-*
          
          DEVICE_PACKAGES := ipq-wifi-zn_m2
        endef
        TARGET_DEVICES += zn_m2
        EOF
        
        # 创建基本配置文件
        cat > .config << 'EOF'
        CONFIG_TARGET_ipq60xx=y
        CONFIG_TARGET_ipq60xx_generic=y
        CONFIG_TARGET_ipq60xx_generic_DEVICE_zn_m2=y
        CONFIG_PACKAGE_luci-app-openclash=y
        EOF
        
        # 强制应用优化参数
        echo 'CONFIG_TARGET_OPTIMIZATION="-Os -pipe -fno-caller-saves -fno-plt"' >> .config

    # ================================
    # 依赖处理区
    # ================================
    - name: Setup Feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a luci-app-openclash
        
        # 清除默认NSS依赖
        sed -i '/nss/d' feeds/luci/applications/luci-app-*/Makefile

    # ================================
    # 编译核心流程
    # ================================
    - name: Prepare Build
      run: |
        cd openwrt
        make defconfig
        make download
        
        # 验证关键配置
        echo "=== 验证配置 ==="
        grep "TARGET_OPTIMIZATION" .config
        grep "zn_m2" .config
        ! grep "nss" .config | grep -v "not set"

    - name: Compile Firmware
      timeout-minutes: 120
      run: |
        cd openwrt
        make -j$(nproc) V=s 2>&1 | tee build.log

    # ================================
    # 后处理与验证
    # ================================
    - name: Verify Artifacts
      run: |
        cd openwrt/bin/targets/ipq60xx/generic/
        
        # 检查固件大小
        FIRMWARE=$(ls *zn_m2*)
        echo "固件大小: $(du -h $FIRMWARE)"
        
        # 检查模块内容
        zgrep "nss" *.manifest && exit 1 || echo "NSS验证通过"
        zgrep "usb" *.manifest && exit 1 || echo "USB验证通过"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: openwrt-zn_m2-minimal
        path: |
          openwrt/bin/targets/ipq60xx/generic/*
          openwrt/build.log
