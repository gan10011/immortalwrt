name: Build Lean OpenWrt for ZN-M2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 180
    
    steps:
    - name: Checkout OpenWrt
      uses: actions/checkout@v4
      with:
        repository: openwrt/openwrt
        ref: v23.05.3
        path: openwrt

    # ================================
    # 修正后的配置修改区
    # ================================
    - name: Apply Device Specific Configuration
      run: |
        cd openwrt
        # 修复 EOF 文档格式问题
        cat << 'CONFIG' > target/linux/ipq60xx/image/generic.mk
define Device/zn_m2
  $(call Device/FitImage)
  $(call Device/UbiFit)
  DEVICE_VENDOR := ZN
  DEVICE_MODEL := M2
  BLOCKSIZE := 128k
  PAGESIZE := 2048
  SOC := ipq6000
  DEVICE_DTS_CONFIG := config@cp03-c1
  
  # 关键修改：精简默认包
  DEFAULT_PACKAGES := \\
    base-files busybox dropbear firewall fstools logd \\
    mtd netifd opkg procd uci urandom-seed urng \\
    kmod-ath10k-ct wpad-openssl \\
    -ipq-wifi-zn_m2 \\
    -kmod-nss-* -kmod-usb* -kmod-dwc3* -ppp* -qca-*
  
  DEVICE_PACKAGES := ipq-wifi-zn_m2
endef
TARGET_DEVICES += zn_m2
CONFIG

        # 创建基本配置文件 (避免使用 EOF 标签)
        echo "CONFIG_TARGET_ipq60xx=y" > .config
        echo "CONFIG_TARGET_ipq60xx_generic=y" >> .config
        echo "CONFIG_TARGET_ipq60xx_generic_DEVICE_zn_m2=y" >> .config
        echo "CONFIG_PACKAGE_luci-app-openclash=y" >> .config
        
        # 强制应用优化参数
        echo 'CONFIG_TARGET_OPTIMIZATION="-Os -pipe -fno-caller-saves -fno-plt"' >> .config

    # ================================
    # 依赖处理区 - 修复 heredoc 问题
    # ================================
    - name: Setup Feeds
      run: |
        cd openwrt
        
        # 使用更安全的方式清除 NSS 依赖
        find . -name "*nss*" -type f -delete 2>/dev/null || true
        sed -i '/nss/d' feeds/luci/applications/luci-app-*/Makefile 2>/dev/null || true
        
        # 更新和安装源
        ./scripts/feeds update -a
        ./scripts/feeds install -a luci-app-openclash

    # ================================
    # 编译准备区
    # ================================
    - name: Prepare Build
      run: |
        cd openwrt
        # 确保配置文件存在
        if [ ! -f .config ]; then
          echo "::error::配置文件缺失!"
          exit 1
        fi
        
        # 应用配置
        make defconfig
        make download -j$(nproc)

    # ================================
    # 修复的编译步骤
    # ================================
    - name: Compile Firmware
      timeout-minutes: 120
      run: |
        cd openwrt
        
        # 获取核心数但限制最大数量
        cores=$(($(nproc) > 8 ? 8 : $(nproc)))
        
        echo "🛠️ 使用 $cores 个核心进行编译..."
        make -j$cores V=s 2>&1 | tee build.log
        
        # 检查是否成功编译
        if ! ls bin/targets/*/*/*.bin 2>/dev/null | grep -q .; then
          echo "::error::编译失败，未生成固件文件"
          exit 1
        fi

    # ================================
    # 结果上传区
    # ================================
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: zn_m2-firmware-${{ github.run_id }}
        path: |
          openwrt/bin/targets/ipq60xx/generic/*.bin
          openwrt/build.log
        retention-days: 3
