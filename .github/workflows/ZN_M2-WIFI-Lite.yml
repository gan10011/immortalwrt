name: ZN_M2-WIFI-Lite

on:
  workflow_dispatch:
  # schedule:
  #   - cron: 0 12 * * *

permissions: write-all

env:
  CONFIG_FILE: imm.config
  CLASH_KERNEL: amd64
  CACHE_TOOLCHAIN: true
  UPLOAD_BIN_DIR: false
  FIRMWARE_RELEASE: true
  FIRMWARE_TAG: ZN_M2-WIFI-Lite
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-22.04

    steps:
    - name: Initialization Environment(初始化环境)
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android $AGENT_TOOLSDIRECTORY
        sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
        sudo -E apt-get -y update
        sudo -E apt-get -y install $(curl -fsSL is.gd/depends_ubuntu_2204)
        sudo timedatectl set-timezone "$TZ"

    - name: Combine Disks(合并磁盘)
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 4096
        temp-reserve-mb: 1000
        root-reserve-mb: 4096

    - name: Checkout Repository(检出仓库)
      uses: actions/checkout@v4
      with:
        path: openwrt
        fetch-depth: 0

    - name: Setup Build Environment(设置编译环境)
      run: |
        cd openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV
        VERSION_INFO=$(git show -s --date=short --format="作者: %an<br/>时间: %cd<br/>内容: %s<br/>hash: %H")
        echo "VERSION_INFO=$VERSION_INFO" >> $GITHUB_ENV
        echo "REPO_URL=$(git remote get-url origin)" >> $GITHUB_ENV
        echo "REPO_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
        
        # 验证配置文件存在
        if [ ! -f "$CONFIG_FILE" ]; then
          echo "::error::配置文件 $CONFIG_FILE 不存在！"
          exit 1
        fi

    - name: Apply Lite Configuration(应用精简配置)
      run: |
        cd $OPENWRT_PATH
        
        # 复制基础配置文件
        cp "$CONFIG_FILE" .config
        
        # 直接修改配置 - 精简步骤
        # 1. 设置中文界面
        echo "CONFIG_PACKAGE_luci-i18n-base-zh-cn=y" >> .config
        
        # 2. 移除NSS相关驱动
        sed -i '/CONFIG_PACKAGE_kmod-qca-nss/d' .config
        sed -i '/CONFIG_PACKAGE_kmod-qca-nss-drv/d' .config
        sed -i '/CONFIG_PACKAGE_kmod-qca-nss-drv-pppoe/d' .config
        
        # 3. 确保WiFi驱动启用
        echo "CONFIG_PACKAGE_kmod-ath11k=y" >> .config
        echo "CONFIG_PACKAGE_kmod-ath11k-ahb=y" >> .config
        echo "CONFIG_PACKAGE_kmod-ath11k-pci=y" >> .config
        echo "CONFIG_PACKAGE_hostapd-common=y" >> .config
        
        # 4. 精简不需要的软件包
        sed -i '/CONFIG_PACKAGE_luci-app-.*/d' .config
        echo "CONFIG_PACKAGE_luci-app-firewall=y" >> .config
        echo "CONFIG_PACKAGE_luci-app-opkg=y" >> .config
        
        # 5. 生成最终配置
        make defconfig > /dev/null 2>&1
        
        # 输出配置摘要
        grep "CONFIG_TARGET\|CONFIG_PACKAGE" .config

    - name: Install Feeds(安装feeds)
      run: |
        cd $OPENWRT_PATH
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Download Packages(下载软件包)
      run: |
        cd $OPENWRT_PATH
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -delete

    - name: Compile Firmware(编译固件)
      id: compile
      run: |
        cd $OPENWRT_PATH
        make -j$(($(nproc)+1)) || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        echo "DATE=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

    - name: Organize Artifacts(整理固件)
      if: steps.compile.outputs.status == 'success'
      run: |
        cd $OPENWRT_PATH/bin/targets/*/*
        cp $OPENWRT_PATH/.config build.config
        mkdir -p packages
        find $OPENWRT_PATH/bin/packages -name '*.ipk' -exec mv {} packages/ \;
        tar -zcf Packages.tar.gz packages
        rm -rf packages
        echo "FIRMWARE_PATH=$PWD" >> $GITHUB_ENV

    - name: Upload to Release(发布固件)
      if: steps.compile.outputs.status == 'success' && env.FIRMWARE_RELEASE == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.FIRMWARE_TAG }}
        name: ${{ env.FIRMWARE_TAG }} - ${{ env.DATE }}
        body: |
          ### 🧾 精简版固件信息
          **设备**: 兆能M2 (ZN-M2)  
          **特点**: 中文界面 + 稳定WiFi驱动  
          **源码**: [${{ env.REPO_BRANCH }}分支](${{ env.REPO_URL }})  
          **管理地址**: 192.168.1.1  
          **默认密码**: password  
          
          ### 📜 更新记录
          ${{ env.VERSION_INFO }}
        files: ${{ env.FIRMWARE_PATH }}/*
