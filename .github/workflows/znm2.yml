name: ZN_M2-WIFI-Lite

on:
  workflow_dispatch:
env:
  CONFIG_FILE: .config
  DIY_SCRIPT: ZN_M2-diy-script-lite.sh
  FIRMWARE_TAG: ZN_M2-WIFI-Lite
  FIRMWARE_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        path: openwrt-src  # 明确指定检出路径
        submodules: recursive
        fetch-depth: 0

    - name: Check Server Performance
      run: |
        echo "警告: 此编译针对低内存设备优化"
        free -h

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get -y install build-essential clang flex g++ gawk gcc-multilib \
          gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev

    - name: Combine Disks
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 2048
        temp-reserve-mb: 512
        root-reserve-mb: 2048

    - name: Prepare Local Source
      run: |
        # 设置OpenWrt源代码路径为明确的检出目录
        OPENWRT_PATH="$GITHUB_WORKSPACE/openwrt-src"
        echo "OPENWRT_PATH=$OPENWRT_PATH" >> $GITHUB_ENV
        
        # 进入仓库目录执行Git命令
        cd $OPENWRT_PATH
        VERSION_INFO=$(git log -1 --date=short --format="作者: %an<br/>时间: %cd<br/>内容: %s<br/>hash: %H")
        echo "VERSION_INFO=$VERSION_INFO" >> $GITHUB_ENV
        
        REPO_BRANCH=$(git rev-parse --abbrev-ref HEAD)
        echo "REPO_BRANCH=$REPO_BRANCH" >> $GITHUB_ENV
        echo "SOURCE_REPO=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV

    - name: Apply Lite Configuration
      run: |
        cd $OPENWRT_PATH
        cp $GITHUB_WORKSPACE/$CONFIG_FILE .config
        cp $GITHUB_WORKSPACE/$DIY_SCRIPT .
        chmod +x $DIY_SCRIPT
        ./$DIY_SCRIPT

    - name: Download DL Package
      run: |
        cd $OPENWRT_PATH
        make download -j4
        find dl -size -1024c -delete

    - name: Compile Lite Firmware
      id: compile
      run: |
        cd $OPENWRT_PATH
        echo "低内存优化编译 (使用-j2减少内存占用)"
        make -j2 || make -j1 V=s
        if [ $? -eq 0 ]; then
          echo "status=success" >> $GITHUB_OUTPUT
          echo "编译成功!"
        else
          echo "status=failure" >> $GITHUB_OUTPUT
          echo "编译失败!"
        fi
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d")" >> $GITHUB_ENV

    - name: Check Space Usage
      if: (!cancelled())
      run: df -hT

    - name: Find Firmware Path
      if: steps.compile.outputs.status == 'success'
      run: |
        cd $OPENWRT_PATH
        # 查找固件文件
        FIRMWARE_PATH=$(find bin/targets -type f -name "*.bin" | head -1 | xargs dirname)
        if [ -z "$FIRMWARE_PATH" ]; then
          echo "找不到固件文件，请检查编译输出"
          exit 1
        fi
        echo "FIRMWARE_PATH=$PWD/$FIRMWARE_PATH" >> $GITHUB_ENV
        echo "固件路径: $FIRMWARE_PATH"
        ls -lh $FIRMWARE_PATH

    - name: Upload Firmware To Release
      if: steps.compile.outputs.status == 'success' && env.FIRMWARE_RELEASE == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.FIRMWARE_TAG }}
        name: Lite Firmware for Low-Memory Devices (${{ env.FILE_DATE }})
        body: |
          ## 精简版固件 - 低内存优化
          - 移除了NSS和USB功能
          - 针对64-128MB内存设备优化
          - 默认地址: 192.168.1.1
          - 默认密码: password
          ### 源码信息
          - 仓库: ${{ github.repository }}
          - 分支: ${{ env.REPO_BRANCH }}
          - 版本信息: ${{ env.VERSION_INFO }}
        files: |
          ${{ env.FIRMWARE_PATH }}/*.bin
          ${{ env.FIRMWARE_PATH }}/sha256sums
